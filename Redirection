Redirection
#ls -l /	{Command will return Standard Output on Monitor}
Redirection Standard Output for any other use :-
#ls -l / > stdout [ 1> and > is same ] 	{This command will redirect to output of ls -l Command to the file stdout, you will not able to see anything on screen after command.
#cat stdout	{ Now this command will show the output of previous command as the output of ls -l / command is stored permanently in stdout file}
Appending the Standard Output :-
#ifconfig > stdout
#ls -l / >> stdout	{This command will append the output of ls -l command to file stdout.
--------------------------------------------------------------------
Redirecting Standard Error
Assuming we are adding the user named motorola and his primary is google, but google group doesn't exist in machine, then useradd command will return the error, and we will store the standard error generated by command.
#useradd -g google motorola	{This command will generate the error}
#useradd -g google motorola 2> error	{by this command any output generated by useradd command is stored into file "error".
--------------------------------------------------------------------
Redirect Standard Output & Error seperatly in single command

$find / -iname passwd > stdout1 2> stderr1	{Command will store the output in file stdout1	and error in stderr1 file seperately}

$find / -iname passwd &> stdout_err	{Command will store the output and error in single file}
---------------------------------------------------------------------
Using Pipe Operator

| (pipe) Operator is used to send the output on one command to another command. For example if we run 
#ls -l /etc
Above command will generate a very long output and we are not able to see the output in one screen, then using | operator, we will redirector the outpur of ls command to more command :

#ls -l /etc/ | more
This will show the output of /etc directory in page wise manner.

Another example :
#cat /etc/passwd	{this will show the output of /etc/passwd file in small alphabets}

#cat /etc/passwd | tr 'a-z' 'A-Z' 	{Command will convert the small letters into capital letters as the output of /etc/passwd is truncated into capital letters using tr command}

#cat /etc/passwd | tr 'a-z' 'A-Z' | more	{Command will send the output of cat command to tr and tr command's output will be sended to more command}

#cat /etc/passwd | tr 'a-z' 'A-Z' > capspasswd	{Finally command will store the output in capspasswd file in capital letters.
--------------------------------------------------------------------------

Using grep command :-

#cat /etc/passwd | grep -i root	{Grep command is used to grep the required output from the long files, in this command we are trying to capture the lines where word "root" is used. -i switch is used to ignore the case senstivity.

#cat /etc/httpd/conf/httpd | grep virtualhost
#cat /etc/httpd/conf/httpd | grep -i virtualhost 	{ see the difference in above last two commands}

--------------------------------------------------------------------------
diff

Create two similar files of 3 or 4 lines and check the differences between both the files
#diff file1 file2 >> track_differences

----------------------------------------------------------------
head & tail

#head -n 10 /etc/passwd
#tail -n 10 /etc/passwd
# ls -lt | head -n 10        {This command will show last 10 modified files in /etc directory}

---------------------------------------------------------------------
tee Command

#ifconfig | tee test12		{this command will store the output of ifconfig command as well display the output of ifconfig on screen }

-----------------------------------------------------------------
Standard Input
echo "redhat" | passwd --stdin student
-----------------------------------------------------------------------
Input & Output Diagram and then 2>&1
2>&1 is used to channelize the data via pipe i.e. stderr is redirected via pipe to stdout and then the data is stored in a file.







